{{$tableComment:=.TableComment}}
<template>
  <div>
    <div class="gva-search-box">
      <el-form ref="searchForm" :model="queryParams" :inline="true" label-position="left">
        {{range .Columns}}
        {{- $x := .IsQuery -}}
        {{- if (eq $x "1") -}}
        <el-form-item label="{{.ColumnComment}}" prop="{{.JsonField}}">
          {{if eq .DictType "" -}}
          <el-input v-model="queryParams.{{.JsonField}}" placeholder="请输入{{.ColumnComment}}" clearable size="small" @keyup.enter.native="handleQuery"/>
          {{- else -}}
          <el-select v-model="queryParams.{{.JsonField}}" placeholder="{{$tableComment}}{{.ColumnComment}}" clearable size="small">
            <el-option
              v-for="dict in {{.JsonField}}Options"
              :key="dict.dictValue"
              :label="dict.dictLabel"
              :value="dict.dictValue"
            />
          </el-select>
          {{- end}}
        </el-form-item>
        {{end}}
        {{- end }}
        <el-form-item label="创建时间">
          <el-date-picker
            v-model="dateRange"
            size="small"
            type="datetimerange"
            range-separator="至"
            start-placeholder="开始日期"
            end-placeholder="结束日期"
            align="right"
            value-format="yyyy-MM-dd HH:mm:ss"
          />
        </el-form-item>
        <el-form-item>
          <el-button type="primary" icon="search" size="small" @click="handleQuery">搜索</el-button>
          <el-button icon="refresh" size="small" @click="resetQuery">重置</el-button>
        </el-form-item>
      </el-form>

      <el-row :gutter="10" class="mb8">
        <el-col :span="1.5">
          <el-button
            type="primary"
            icon="el-icon-plus"
            size="small"
            @click="handleAdd"
          >新增
          </el-button>
        </el-col>
        <el-col :span="1.5">
          <el-button
            type="success"
            icon="el-icon-plus"
            size="small"
            @click="handleExport"
          >Excel导出
          </el-button>
        </el-col>
      </el-row>

      <el-table v-loading="loading" stripe border :data="{{.BusinessName}}List" >
        <el-table-column label="序号" type="index" align="center" width="80">
          <template #default="scope">
            <span>{{ "{{" }}(queryParams.pageIndex - 1) * queryParams.pageSize + scope.$index + 1{{ "}}" }}</span>
          </template>
        </el-table-column>

        {{- range .Columns -}}
        {{- if ne .DictType "" -}}

        <el-table-column width="100" label="{{.ColumnComment}}" align="center" prop="{{.JsonField}}" :formatter="{{.JsonField}}Format">
          <template slot-scope="scope">
           {{ "{{" }} {{.JsonField}}Format(scope.row) {{"}}"}}
          </template>
        </el-table-column>

        {{- end -}}
        {{- if eq .DictType "" -}}
        {{- if eq .HtmlType "datetime" -}}
        <el-table-column width="100" label="{{.ColumnComment}}" align="center" prop="{{.JsonField}}" :show-overflow-tooltip="true">
          <template slot-scope="scope">
            <span>{{ "{{" }} parseTime(scope.row.{{.JsonField}}) {{"}}"}}</span>
          </template>
        </el-table-column>

        {{- else -}}
        <el-table-column width="100" label="{{.ColumnComment}}" align="center" prop="{{.JsonField}}" :show-overflow-tooltip="true"/>

        {{- end -}}
        {{- end -}}
        {{- end }}


        <el-table-column width="100" fixed="right" label="操作" align="center" class-name="small-padding fixed-width">
          <template #default="scope">
            <el-button
                size="small"
                type="text"
                icon="el-icon-edit"
                @click="handleUpdate(scope.row)"
            >修改
            </el-button>
            <el-button
                size="small"
                type="text"
                icon="el-icon-delete"
                @click="handleDelete(scope.row)"
            >删除
            </el-button>
          </template>
        </el-table-column>
      </el-table>

      <pagination
          v-show="total>0"
          :total="total"
          v-model:page="queryParams.pageIndex"
          v-model:limit="queryParams.pageSize"
          @pagination="getList"
      />

      <!-- 添加或修改对话框 -->
      <el-dialog :close-on-click-modal="false" :title="title" v-model="open" width="500px" append-to-body>
        <el-form ref="inputform" :model="form" :rules="rules" label-width="80px">
          {{ range .Columns }}
          {{- $x := .IsInsert -}}
          {{- if (eq $x "1") -}}
          {{- if (.Pk) }}
          {{- else if eq .GoField "CreatedAt" -}}
          {{- else if eq .GoField "UpdatedAt" -}}
          {{- else if eq .GoField "DeletedAt" -}}
          {{- else if eq .GoField "UpdateBy" -}}
          {{- else if eq .GoField "CreateBy" -}}
          {{- else }}
          <el-form-item label="{{.ColumnComment}}" prop="{{.JsonField}}">
            {{ if eq "input" .HtmlType -}}
            <el-input v-model="form.{{.JsonField}}" placeholder="{{.ColumnComment}}" {{if eq .IsEdit "false" -}}:disabled="isEdit" {{- end}}/>
            {{- else if eq "select" .HtmlType -}}
            <el-select v-model="form.{{.JsonField}}" placeholder="请选择" {{if eq .IsEdit "false" -}} :disabled="isEdit" {{- end }}>
            <el-option
                v-for="dict in {{.JsonField}}Options"
                :key="dict.dictValue"
                :label="dict.dictLabel"
                :value="dict.dictValue"
            />
            </el-select>
            {{- else if eq "datetime" .HtmlType -}}
            <el-date-picker
                v-model="form.{{.JsonField}}"
                type="datetime"
                placeholder="选择日期">
            </el-date-picker>
            {{- else if eq "textarea" .HtmlType -}}
            <el-input v-model="form.{{.JsonField}}" type="textarea" :rows="2"placeholder="请输入内容"></el-inpu>
            {{- end }}
          </el-form-item>
          {{- end }}
          {{- end }}
          {{- end }}
        </el-form>
        <div slot="footer" class="dialog-footer">
          <el-button type="primary" @click="submitForm">确 定</el-button>
          <el-button @click="cancel">取 消</el-button>
        </div>
      </el-dialog>
    </div>
  </div>
</template>

<script>
export default {
  name: '{{.ClassName}}',
}
</script>

<script setup>
import { getCurrentInstance, ref } from 'vue'
import { ElMessage, ElMessageBox } from 'element-plus'
import { resolveBlob } from '@/utils/zipdownload'
import { export{{.ClassName}}, add{{.ClassName}}, del{{.ClassName}}, get{{.ClassName}}, list{{.ClassName}}, update{{.ClassName}} } from '@/api/{{ .PackageName}}/{{ .BusinessName}}'

const { proxy } = getCurrentInstance()

// 遮罩层
const loading = ref(true)
// 总条数
const total = ref(0)
// 弹出层标题
const title = ref('')
// 是否显示弹出层
const open = ref(false)
// 是否编辑
const isEdit = ref(false)
// 日期范围
const dateRange = ref([])
// 类型数据字典
const {{.BusinessName}}List = ref([])
{{range .Columns}}
{{- if ne .DictType "" -}}
{{.JsonField}}Options = ref([])
{{- end -}}
{{- end }}
// 查询参数
const queryParams = ref({
  pageIndex: 1,
  pageSize: 10,
  {{ range .Columns }}
  {{- if (.IsQuery) -}}
  {{.JsonField}}: undefined,
  {{ end -}}
  {{- end }}
})
// 表单参数
const form = ref({})
// 表单校验
const rules = ref({
  {{- range .Columns -}}
  {{- $x := .IsQuery -}}
  {{- if (eq $x "1") -}}
  {{.JsonField}}:  [ {required: true, message: '{{.ColumnComment}}不能为空', trigger: 'blur'} ],
  {{ end }}
  {{- end -}}
})

// ref form
const inputform = ref(null)
const searchForm = ref(null)

const init = () =>{
  getList()
  {{range .Columns}}
  {{- if ne .DictType "" -}}
  getDicts('{{.DictType}}').then(response => {
    {{.JsonField}}Options.value = response.data
  })
  {{ end -}}
  {{- end -}}
}

/** 查询参数列表 */
const getList = () => {
  loading.value = true
  list{{.ClassName}}(proxy.addDateRange(queryParams.value, dateRange.value)).then(response => {
    {{.BusinessName}}List.value = response.data.list
    total.value = response.data.count
    loading.value = false
  })
}

// 取消按钮
const cancel = () => {
  open.value = false
  reset()
}

// 表单重置
const reset = () => {
  form.value = {
    {{ range .Columns}}
    {{- $x := .IsInsert -}}
    {{- if (eq $x "1") -}}
    {{- if eq .GoField "CreatedAt" -}}
    {{- else if eq .GoField "UpdatedAt" -}}
    {{- else if eq .GoField "DeletedAt" -}}
    {{- else if eq .GoField "UpdateBy" -}}
    {{- else if eq .GoField "CreateBy" -}}
    {{- else }}
    {{.JsonField}}: undefined,
    {{- end }}
    {{- end -}}
    {{- end }}
  }
  inputform.value.resetFields()
}

// 字典
{{range .Columns}}
{{- if ne .DictType "" -}}
const {{.JsonField}}Format = (row) => {
  return selectDictLabel({{.JsonField}}Options.value, row.{{.JsonField}})
}
{{ end -}}
{{- end -}}

/** 搜索按钮操作 */
const handleQuery = () => {
  queryParams.value.pageIndex = 1
  getList()
}

/** 重置按钮操作 */
const resetQuery = () => {
  dateRange.value = []
  searchForm.value.resetFields()
  handleQuery()
}

/** 新增按钮操作 */
const handleAdd = () => {
  reset()
  open.value = true
  title.value = '添加{{.TableComment}}'
  isEdit.value = false
}

/** 修改按钮操作 */
const handleUpdate = (row) => {
  reset()
  const {{.PkJsonField}} = row.{{.PkJsonField}}
  get{{.ClassName}}({{.PkJsonField}}).then(response => {
    form.value = response.data
    open.value = true
    title.value = '修改{{.TableComment}}'
    isEdit.value = true
  })
}

/** 提交按钮 */
const submitForm = () => {
  inputform.value.validate(valid => {
    if (valid) {
      if (form.value.{{.PkJsonField}} !== undefined) {
        update{{.ClassName}}(form.value).then(response => {
          let respType = 'error'
          if (response.code === 200) {
            respType = 'success'
            open.value = false
            getList()
          }
          ElMessage({
            type: respType,
            message: response.msg,
            showClose: true,
          })
        })
      } else {
        add{{.ClassName}}(this.form).then(response => {
          let respType = 'error'
          if (response.code === 200) {
            respType = 'success'
            open.value = false
            getList()
          }
          ElMessage({
            type: respType,
            message: response.msg,
            showClose: true,
          })
        })
      }
    }
  })
}

/** 删除按钮操作 */
const handleDelete = (row) => {
  var id = row.{{.PkJsonField}}

  ElMessageBox.confirm('是否确认删除编号为"' + id + '"的数据项?', '警告', {
    confirmButtonText: '确定',
    cancelButtonText: '取消',
    type: 'warning'
  }).then(() => {
    return del{{.ClassName}}({ 'id': id })
  }).then((response) => {
    let respType = 'error'
    if (response.code === 200) {
      respType = 'success'
      open.value = false
      getList()
    }
    ElMessage({
      type: respType,
      message: response.msg,
      showClose: true,
    })
  }).catch(() => {
    ElMessage({
      type: 'info',
      message: '取消操作'
    })
  })
}

/** 下载excel */
const handleExport = () => {
  ElMessageBox.confirm('是否确认导出所选数据？', '提示', {
    confirmButtonText: '确认',
    cancelButtonText: '取消',
    type: 'warning'
  }).then(() => {
    export{{.ClassName}}(proxy.addDateRange(queryParams.value,'application/zip', dateRange.value)).then(response => {
      resolveBlob(response, '{{.TableComment}}')
    })
  }).catch(() => {
  })
}

init()
</script>
